# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class# C extensions
*.so# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
<<<<<<< HEAD
MANIFEST



# PyInstaller
# Usually these files are written by a python script from a template
# before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec



# Installer logs
pip-log.txt
pip-delete-this-directory.txt



# Unit test / coverage reports
=======
MANIFEST# PyInstaller
# Usually these files are written by a python script from a template
# before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec# Installer logs
pip-log.txt
pip-delete-this-directory.txt# Unit test / coverage reports
>>>>>>> origin/development
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
<<<<<<< HEAD
.pytest_cache/



# Translations
*.mo
*.pot



# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal



# Flask stuff:
instance/
.webassets-cache



# Scrapy stuff:
.scrapy



# Sphinx documentation
docs/_build/



# PyBuilder
target/



# Jupyter Notebook
.ipynb_checkpoints



# IPython
profile_default/
ipython_config.py



# pyenv
.python-version



# pipenv
=======
.pytest_cache/# Translations
*.mo
*.pot# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal# Flask stuff:
instance/
.webassets-cache# Scrapy stuff:
.scrapy# Sphinx documentation
docs/_build/# PyBuilder
target/# Jupyter Notebook
.ipynb_checkpoints# IPython
profile_default/
ipython_config.py# pyenv
.python-version# pipenv
>>>>>>> origin/development
# According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
# However, in case of collaboration, if having platform-specific dependencies or dependencies
# having no cross-platform support, pipenv may install dependencies that don't work, or not
# install all needed dependencies.
#Pipfile.lock
# https://www.obytes.com/blog/building-a-full-text-search-app-using-django-docker-and-elasticsearch
# PEP 582; used by e.g. github.com/David-OConnor/pyflow
<<<<<<< HEAD
__pypackages__/



# Celery stuff
celerybeat-schedule
celerybeat.pid



# SageMath parsed files
*.sage.py



# Environments
=======
__pypackages__/# Celery stuff
celerybeat-schedule
celerybeat.pid# SageMath parsed files
*.sage.py# Environments
>>>>>>> origin/development
.env
.venv
env/
venv/
ENV/
env.bak/
<<<<<<< HEAD
venv.bak/



# Spyder project settings
.spyderproject
.spyproject



# Rope project settings
.ropeproject



# mkdocs documentation
/site



# mypy
=======
venv.bak/# Spyder project settings
.spyderproject
.spyproject# Rope project settings
.ropeproject# mkdocs documentation
/site# mypy
>>>>>>> origin/development
.mypy_cache/
.dmypy.json
dmypy.json
.db.json
.output.json
# Pyre type checker
.pyre/
data
<<<<<<< HEAD
=======
env
>>>>>>> origin/development

